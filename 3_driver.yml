target_default: 3_driver

include:

packages:
  - dplyr
  - zip
  - readr
  - sf

sources:
  - src/file_functions.R
  - src/fetch_filter_functions.R

targets:
  3_driver:
    depends:
      # - out_data/distance_matrix.csv
      # - out_data/reach_attributes.csv
      # - out_data/reservoir_features.csv
      # - out_data/sntemp_inputs_outputs.zip
      # - out_data/reservoir_interpolated_daily_water_budget_components.csv
        - out_data/gridmet_drb_agg.csv.zip
        - out_data/gridmet_drb_agg.nc.zip
        - out_data/reanalysis_gefs_fy22.csv.zip
        - out_data/uncal_sntemp_input_output.nc.zip
      

  #weather_drivers:
   # command: extract_weather_drivers()
    
  #out_data/weather_drivers.zip:
   # command: zip_this(out_file = target_name, in_file = weather_drivers)
    
  out_data/distance_matrix_drb.csv:
     command: get_distance_matrix(out_file = target_name, in_file = 'in_data/03_driver/distance_matrix.rds')
  # 
  # ##### Transfer of files from delaware-model-prep #####
  # # should we move these files to the spatial data section?
  # out_data/distance_matrix_lordville.csv:
  #   command: get_distance_matrix(out_file = target_name, in_file = '../delaware-model-prep/9_collaborator_data/umn/distance_matrix_lordville.rds')
  # 
  # out_data/reach_attributes_drb.csv:
  #   command: extract_reach_attributes(
  #     res_file = '../delaware-model-prep/1_network/out/segments_relative_to_reservoirs.rds',
  #     attr_file = '../delaware-model-prep/1_network/out/network.rds',
  #     out_file = target_name)
  #     
  # # filter to the segments upstream of Lordville
  # out_data/reach_attributes_lordville.csv:
  #   command: filter_to_subset(out_file = target_name, in_file = 'out_data/reach_attributes.csv', segments = lordville_sites)
  #   
  # out_data/reservoir_features_drb.csv:
  #   command: file.copy(from = '../delaware-model-prep/9_collaborator_data/umn/reservoir_features.csv', to = target_name)
  #   
  # out_data/sntemp_inputs_outputs_drb.csv:
  #   command: get_sntemp_output(out_file = target_name, in_file = '../delaware-model-prep/3_predictions/out/uncal_sntemp_input_output.feather')
  # 
  # out_data/sntemp_inputs_outputs_drb.zip:
  #   command: zip_obs(out_file = target_name, in_file = 'out_data/sntemp_inputs_outputs.csv')
  # 
  # out_data/reservoir_interpolated_daily_water_budget_components.csv:
  #   command: file.copy(from = '../delaware-model-prep/2_observations/out/interpolated_daily_reservoir_water_budget_components.csv', to = target_name)

  out_data/gridmet_drb_agg.csv:
    command: file.copy(from = 'in_data/03_driver/drb_climate_2022_04_06_segments.csv', to = target_name)
    
  out_data/gridmet_drb_agg.csv.zip:
    command: zip_this(out_file = target_name, .object = 'out_data/gridmet_drb_agg.csv')
    
      out_data/gridmet_drb_agg.nc:
    command: file.copy(from = 'in_data/03_driver/drb_climate_2022_04_06.nc', to = target_name)
    
  out_data/gridmet_drb_agg.nc.zip:
    command: zip_this(out_file = target_name, .object = 'out_data/drb_climate_2022_04_06.nc')
    
  out_data/reanalysis_gefs_fy22.csv:
    command: file.copy(from = 'in_data/03_driver/reanalysis_gefs_fy22.csv', to = target_name)

  out_data/reanalysis_gefs_fy22.csv.zip:
    command: zip_this(out_file = target_name, .object = 'out_data/reanalysis_gefs_fy22.csv')
  
  out_data/uncal_sntemp_input_output.nc:
    command: file.copy(from = 'in_data/03_driver/uncal_sntemp_input_output.nc', to = target_name)

  out_data/uncal_sntemp_input_output.nc.zip:
    command: zip_this(out_file = target_name, .object = 'out_data/uncal_sntemp_input_output.nc')